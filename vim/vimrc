call pathogen#infect()


set nocompatible " vi is dead, long live vim
let mapleader=" "

" THE COLOURS CHILDREN, THE COLOURS!
syntax on
set background=dark
colorscheme flatlandia
set guifont=Menlo:h12

" Enable mouse in xterm and enable long (>223) lines
set mouse=a
set ttymouse=xterm2

" always show line numbers
set number

" sync clipbaord with OSX
if $TMUX == ''
  set clipboard+=unnamed
endif

" Smart indenting when starting new line
set smartindent

" dont attempt to render a/b/i/strong/em in HTML
let html_no_rendering=1

" Indent with two spaces
set expandtab
set tabstop=4
set softtabstop=2
set shiftwidth=2

" override tab settings for php
augroup filetype_php
autocmd!
autocmd FileType php setlocal noexpandtab shiftwidth=4 tabstop=4
augroup END

" Ruby whitespace: two spaces, no tabs
" (currently matches global config, remains as reference)
autocmd FileType ruby setlocal sts=2 ts=2 sw=2 et
autocmd FileType cucumber setlocal sts=2 ts=2 sw=2 et
autocmd FileType scss setlocal sts=2 ts=2 sw=2 et

" highlight trailing whitespace etc
highlight ExtraWhitespace ctermbg=darkgreen guibg=darkgreen
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=brown guibg=brown
match ExtraWhitespace /\s\+\%#\@<!$/

" see http://items.sjbach.com/319/configuring-vim-right
" essential
set hidden
runtime macros/matchit.vim
set wildmenu
set wildmode=list:longest
" recommended
set ignorecase
set smartcase
set scrolloff=3
set nobackup
set noswapfile
set ruler
set visualbell
set backspace=2
" If you search for an all-lowercase string your search will be case-insensitive,
" but if one or more characters is uppercase the search will be case-sensitive.
set ignorecase
set smartcase
" :s/pttn/replace/g by default
set gdefault
" Highlisght search results as you type, <leader><space> to clear
set incsearch
set showmatch
set hlsearch
nnoremap <leader><space> :noh<cr>

" short info tokens, short command line messages, no intro.
set shortmess=atI

" see http://stevelosh.com/blog/2010/09/coming-home-to-vim/
filetype off

filetype plugin indent on
set history=1000
" Prevent exploits re modelines in files.
set modelines=0
" Make things better
set encoding=utf-8
set cursorline
set ttyfast
set laststatus=2

" Make j & k sane, instead of archaic “movement by file line instead of screen line”
nnoremap j gj
nnoremap k gk

" Strip trailing whitespace
nnoremap <leader>q :%s/\s\+$//<cr>:let @/=''<cr>

" refresh all buffers
nnoremap <leader>+ :set noconfirm<cr>:bufdo e!<cr>:set confirm<cr>

" disable middle-click paste, as I hit that all the time by mistake
nnoremap <MiddleMouse> <Nop>
nnoremap <2-MiddleMouse> <Nop>
nnoremap <3-MiddleMouse> <Nop>
nnoremap <4-MiddleMouse> <Nop>

inoremap <MiddleMouse> <Nop>
inoremap <2-MiddleMouse> <Nop>
inoremap <3-MiddleMouse> <Nop>
inoremap <4-MiddleMouse> <Nop>

" Shortcuts for opening files in same directory as current file
map <leader>en :e <C-R>=expand("%:p:h") . "/" <CR>
map <leader>es :sp <C-R>=expand("%:p:h") . "/" <CR>
map <leader>ev :vsp <C-R>=expand("%:p:h") . "/" <CR>
map <leader>et :tabe <C-R>=expand("%:p:h") . "/" <CR>

" :w shortcut
nnoremap <Leader>w :w<CR>

" Unbind the cursor keys in insert, normal and visual modes.
for prefix in ['n', 'v']
  for key in ['<Up>', '<Down>', '<Left>', '<Right>']
    exe prefix . "noremap " . key . " <Nop>"
  endfor
endfor

" Arrow keys navigate split windows!
nmap <Up> <C-W><Up>
nmap <Down> <C-W><Down>
nmap <Left> <C-W><Left>
nmap <Right> <C-W><Right>

" open new splits to the right or below instead of left or above
set splitbelow
set splitright

" spellcheck templates and commit messages
if has('spell')
  autocmd BufNewFile,BufRead COMMIT_EDITMSG setlocal spell
  autocmd FileType eruby                    setlocal spell
  autocmd BufNewFile,BufRead *.tpl.php      setlocal spell
endif

" replace ack with ag
let g:ackprg = 'ag --nogroup --nocolor --column'

" custom powerline build against brew'd python
" source /usr/local/lib/python2.7/site-packages/powerline/bindings/vim/plugin/powerline.vim
" set laststatus=2
" hide default mode indicator in favour of Powerline
set noshowmode

" vim-airline theme
let g:airline_theme = 'murmur'

" fast switching of mode indication in Powerline
if ! has('gui_running')
    set ttimeoutlen=10
    augroup FastEscape
        autocmd!
        au InsertEnter * set timeoutlen=0
        au InsertLeave * set timeoutlen=1000
    augroup END
endif
